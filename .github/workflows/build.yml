name: 'Publish and Deploy'

on:
    push:
        branches: [ main, master ]
    pull_request:
        branches: [ main, master ]
    workflow_dispatch:
        inputs:
            build_macos_aarch64:
                description: 'Build for macOS aarch64'
                required: false
                type: boolean
                default: true
            build_macos_x86_64:
                description: 'Build for macOS x86_64'
                required: false
                type: boolean
                default: true
            build_linux_x86_64:
                description: 'Build for Linux x86_64'
                required: false
                type: boolean
                default: true
            build_linux_aarch64:
                description: 'Build for Linux aarch64'
                required: false
                type: boolean
                default: true
            build_windows_x86_64:
                description: 'Build for Windows x86_64'
                required: false
                type: boolean
                default: true
            build_windows_aarch64:
                description: 'Build for Windows aarch64'
                required: false
                type: boolean
                default: true

permissions:
    contents: write
    pages: write
    id-token: write

concurrency:
    group: pages
    cancel-in-progress: false

jobs:
    publish-tauri:
        permissions:
            contents: write
        strategy:
            fail-fast: false
            matrix:
                include:
                    - platform: 'macos-latest'
                      target: 'aarch64-apple-darwin'
                      args: '--target aarch64-apple-darwin'
                      enabled: ${{ github.event.inputs.build_macos_aarch64 == 'true' }}
                    - platform: 'macos-latest'
                      target: 'x86_64-apple-darwin'
                      args: '--target x86_64-apple-darwin'
                      enabled: ${{ github.event.inputs.build_macos_x86_64 == 'true' }}
                    - platform: 'ubuntu-22.04'
                      target: 'x86_64-unknown-linux-gnu'
                      args: ''
                      enabled: ${{ github.event.inputs.build_linux_x86_64 == 'true' }}
                    - platform: 'ubuntu-22.04'
                      target: 'aarch64-unknown-linux-gnu'
                      args: ''
                      enabled: ${{ github.event.inputs.build_linux_aarch64 == 'true' }}
                    - platform: 'windows-latest'
                      target: 'x86_64-pc-windows-msvc'
                      args: ''
                      enabled: ${{ github.event.inputs.build_windows_x86_64 == 'true' }}
                    - platform: 'windows-latest'
                      target: 'aarch64-pc-windows-msvc'
                      args: '--target aarch64-pc-windows-msvc'
                      enabled: ${{ github.event.inputs.build_windows_aarch64 == 'true' }}

        runs-on: ${{ matrix.platform }}
        timeout-minutes: 60
        steps:
            - name: Checkout
              if: ${{ matrix.enabled }}
              uses: actions/checkout@v3

            # Tauri key check removed for simplified deployment

            - name: Install rust target
              if: ${{ matrix.enabled }}
              run: rustup target add ${{ matrix.target }}

            - uses: pnpm/action-setup@v3
              if: ${{ matrix.enabled }}
              with:
                  version: latest

            - name: Sync node version and setup cache
              if: ${{ matrix.enabled }}
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: pnpm

            - name: Install Rust stable
              if: ${{ matrix.enabled }}
              uses: dtolnay/rust-toolchain@stable
              with:
                  targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

            - name: Install dependencies (ubuntu only)
              if: ${{ matrix.enabled && matrix.platform == 'ubuntu-22.04'}}
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

            - name: Install frontend dependencies
              if: ${{ matrix.enabled }}
              run: pnpm install

            - uses: tauri-apps/tauri-action@v0
              if: ${{ matrix.enabled }}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tagName: 'PakePlus-v__VERSION__'
                  releaseName: 'PakePlus v__VERSION__'
                  body_path: ./Note.md
                  releaseDraft: true
                  prerelease: false
                  args: ${{ matrix.args }}

    deploy-pages:
        needs: publish-tauri
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - uses: pnpm/action-setup@v3
              with:
                  version: 9

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: pnpm

            - name: Setup Pages
              uses: actions/configure-pages@v4

            - name: Install dependencies
              run: pnpm install

            - name: GitPress Config
              run: node ./scripts/gitpress.cjs gitBase

            - name: Build with VitePress
              run: pnpm run docs:build

            - name: Copy Static
              run: node ./scripts/gitpress.cjs copyStatic

            - name: Upload artifact
              uses: actions/upload-pages-artifact@v3
              with:
                  path: docs/dist

    deploy:
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        needs: deploy-pages
        runs-on: ubuntu-latest
        steps:
            - name: Deploy to GitHub Pages
              id: deployment
              uses: actions/deploy-pages@v4
