name: Test
on: push

jobs:
    publish-tauri:
        permissions:
            contents: write
        strategy:
            fail-fast: false
            matrix:
                include:
                    - platform: 'macos-latest' # for Arm based macs (M1 and above).
                      target: 'aarch64-apple-darwin'
                      args: '--target aarch64-apple-darwin'
                    - platform: 'macos-latest' # for Intel based macs.
                      target: 'x86_64-apple-darwin'
                      args: '--target x86_64-apple-darwin'
                    - platform: 'ubuntu-20.04'
                      target: 'x86_64-unknown-linux-gnu'
                      args: ''
                    - platform: 'windows-latest'
                      target: 'x86_64-pc-windows-msvc'

                    - platform: 'windows-latest'
                      target: 'i686-pc-windows-msvc'
                    - platform: 'windows-latest'
                      target: 'aarch64-pc-windows-msvc'
                      args: '--target aarch64-pc-windows-msvc'

        runs-on: ${{ matrix.platform }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Install rust target
              run: rustup target add ${{ matrix.target }}

            - name: Install dependencies (ubuntu only)
              if: matrix.platform == 'ubuntu-20.04'
              # You can remove libayatana-appindicator3-dev if you don't use the system tray feature.
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev

            - name: Setup node
              uses: actions/setup-node@v4
              with:
                  node-version: 20

            - uses: pnpm/action-setup@v3
              with:
                  version: latest

            # 获取 pnpm 缓存
            - name: Sync node version and setup cache
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: pnpm

            - name: install Rust stable
              uses: dtolnay/rust-toolchain@stable # Set this to dtolnay/rust-toolchain@nightly
              with:
                  # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
                  targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

            - name: Rust cache
              uses: swatinem/rust-cache@v2
              with:
                  workspaces: './src-tauri -> target'

            - name: install frontend dependencies
              # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
              run: pnpm install # change this to npm or pnpm depending on which one you use.

            - uses: tauri-apps/tauri-action@v0
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  releaseName: 'PakePlus Test'
                  releaseBody: 'This is a draft version'
                  releaseDraft: true
                  prerelease: false
                  publish: false
                  args: ${{ matrix.args }}
